name: publish
on:
  pull_request:
    types: [closed]
    branches:
      - development
      - main
  workflow_dispatch:

jobs:
  publish:
    #if: github.event.pull_request.merged == true
    timeout-minutes: 15
    runs-on: ubuntu-latest

    steps:
    - name: "Checkout"
      uses: actions/checkout@v3
      with:
        path: main
        fetch-depth: 0

    - name: setup git config
      run: |
        cd main
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor }}@users.noreply.github.com"

    - name: setup npm credential
      run: npm set "//registry.npmjs.org/:_authToken=$NPM_TOKEN"
      env:
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: version and publish
      run: |
        cd main
        if [ "${GITHUB_REF##*/}" = main ]; then
          npx lerna version --conventional-commits --conventional-graduate --yes
        else
          npx lerna version --conventional-commits --conventional-prerelease --preid beta --yes
        fi
        npx lerna publish from-git --yes
      env:
        GH_TOKEN: ${{ secrets.ACCESS_PASS }}

    - name: install redis service
      uses: pfapi/redis-cluster-service@v1
      
    - name: isolate out strapi-app
      run: |
        cp -pr main/packages/strapi-app ./
        cd strapi-app
        rm config/plugins.js
        rm -rf node_module
        rm package-lock.json

    - name: install strapi-app dependencies
      run: cd strapi-app; npm install

    - name: build strapi-app
      run: cd strapi-app; npm run build

    - name: run test
      run: cd strapi-app; npm run test

    - name: Install @pfapi/tester
      run: npm install @pfapi/tester --location=global

    - name: run develop
      run: cd strapi-app; npm run develop &

    - name: Wait Util Ready
      run: cd strapi-app; npm run wait-ready

    - name: run pfapi-tester 1 time with verbose 
      run: pfapi-tester -t 1 -v

    - name: run pfapi-tester 10 times and concurrent
      run: pfapi-tester -t 10 -c

    - name: run pfapi-tester 1 time, fetch items and concurrent
      run: npx pfapi-tester -t 1 -f -c

    - name: run pfapi-tester walk through and fetch items
      run: pfapi-tester -w -f
