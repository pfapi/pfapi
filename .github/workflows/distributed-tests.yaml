name: distributed tests
on: workflow_dispatch

jobs:

  distributed-tests:

    timeout-minutes: 15

    runs-on: ubuntu-latest

    steps:

      - name: add redis repo
        run: curl -fsSL https://packages.redis.io/gpg | sudo gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg ; echo "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/redis.list

      - name: update
        run: sudo apt-get update -y

      - name: install redis
        run: sudo apt-get install redis -y

      - name: Checkout pfapi/pfapi-dev-test
        uses: actions/checkout@v3
        with:
            repository: pfapi/pfapi-dev-test
            path: main

      - name: Install dependencies for pfapi-dev-test
        run: cd main; yarn install

      - name: Run redis-cluster
        run: cd main; sudo node tools/redis-cluster

      - name: start redis-7000
        run: sudo systemctl restart redis-7000

      - name: check redis-7001
        run: sudo systemctl restart redis-7001

      - name: start redis-7002
        run: sudo systemctl restart redis-7002

      - name: start redis-7003
        run: sudo systemctl restart redis-7003

      - name: start redis-7004
        run: sudo systemctl restart redis-7004

      - name: start redis-7005
        run: sudo systemctl restart redis-7005

      - name: set up cluster
        run: redis-cli --cluster create 127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 127.0.0.1:7003 127.0.0.1:7004 127.0.0.1:7005 --cluster-replicas 1 --cluster-yes

      - name: check cluster
        run: redis-cli --cluster check 127.0.0.1:7000
        
      - name: start mysql service
        run: sudo systemctl restart mysql

      - name: Checkout pfapi/pfapi-dev-test
        uses: actions/checkout@v3
        with:
            repository: pfapi/pfapi-dev-test
            path: main

      - name: Checkout pfapi/pfapi
        uses: actions/checkout@v3
        with:
            repository: pfapi/pfapi
            path: main/src/plugins/pfapi

      - name: Install dependencies for pfapi
        run: cd main/src/plugins/pfapi; yarn install

      - name: set nginx config
        run: cd main; sudo cp tools/nginx.conf /etc/nginx/nginx.conf

      - name: start nginx service
        run: sudo systemctl restart nginx

      - name: Install dependencies for pfapi-dev-test
        run: cd main; yarn install

      - name: set to use mysql database config
        run: cd main; cp tools/db-mysql.js config/database.js

      - name: set mylogin.cnf
        run: cd main; cp tools/mylogin.cnf ~/.mylogin.cnf ; chmod 600 ~/.mylogin.cnf

      - name: run sql show databases
        run: mysql --login-path=local -e "show databases"

      - name: copy redis-env
        run: cd main; cp tools/redis-env .env

      - name: run prepare
        run: cd main; node tools/prepare

      - name: Build strapi
        run: cd main; yarn build

      - name: Run strapi on port 8181
        run: cd main; PORT=8181 yarn develop &

      - name: Wait Util Ready on port 8181
        run: cd main; node tools/wait-util-ready.js 8181

      - name: Run strapi on port 8282
        run: cd main; PORT=8282 yarn develop &

      - name: Wait Util Ready on port 8282
        run: cd main; node tools/wait-util-ready.js 8282

      - name: Wait Util Ready nginx
        run: cd main; node tools/wait-util-ready.js

      - name: run yarn test
        run: cd main; yarn test

      - name: Install @pfapi/tester
        run: npm install @pfapi/tester -g

      - name: run pfapi-tester 1 time with verbose 
        run: pfapi-tester -t 1 -v

      - name: run pfapi-tester 10 times and concurrent
        run: pfapi-tester -t 10 -c

      - name: run pfapi-tester 1 times, fetch items and concurrent
        run: pfapi-tester -f -c

      - name: run pfapi-tester walk through and fetch items
        run: pfapi-tester -w -f

      - name: Kill Strapi
        run: kill -9 $(ps aux | grep yarn | awk '{print $2}')