name: to release

on:
  workflow_dispatch:
  issues:
    types: [ opened ]
  
jobs:

  to-release:

    timeout-minutes: 15

    runs-on: ubuntu-latest

    steps:

      - name: if issues opened and conditions satisfied
        if: github.event_name == 'issues' && github.repository_owner == github.actor && startsWith( github.event.issue.title, 'to-release' )
        run: |
          echo "TITLE=${{ github.event.issue.title }}" >> $GITHUB_ENV
          echo "ISSUE_URL=${{ github.event.issue.url }}" >> $GITHUB_ENV

      - name: get OK
        run: |
          OK=true
          [ "$GITHUB_EVENT_NAME" == 'issues' ] && [ -z "$TITLE" ] && OK=false
          echo "OK=$OK" >> $GITHUB_ENV
  
      - name: Checkout
        if: env.OK == 'true' 
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Checkout all branches and tags

      - name: setup
        if: env.OK == 'true' 
        run: |
          echo "API_URL=${{ github.api_url }}/repos/${{ github.repository }}" >> $GITHUB_ENV
          echo "GH_TOKEN=${{ secrets.GH_TOKEN }}" >> $GITHUB_ENV
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"

      - name: sync changed files
        if: env.OK == 'true' 
        run: .github/bin/sync-files


      - name: create pull request
        if: env.OK == 'true' 
        run: |
          git checkout development
          .github/bin/create-pr

      - name: close issue
        if: env.OK == 'true' && github.event_name == 'issues'
        run: .github/bin/close-issue